  #dataset:
    exp_name: colab_run #experiment name
    noise_type: gaussian
    ewald_radius: 10000 #ewald sphere radius, the higher the radius lower the curvature.
    simulated: True # simulated data
    algotype: train #training paradigm always true
    device: "cpu" # device
    datasetsize: 41000 # size of data
    snr_val: 40   #snr of the data generated
    lambdapenalty: 0.001 #discirimnator gradient penalty weight
    init_with_gt: False  # initialize the reconstruction with gt
    down_res_in_pixel: 2   # down sampling of the gt if init is true
    loss_mode: "matrix"   # loss function operating on the pose parameterization. matrix means rotation matriz are used for the calculation instead of euler angles
    unet: False
    protein: splice   # name of the protein. Name change reflects in dataio init_gt function
    train_num_workers: 32   # number of workers to load data

    #multires:
    multires: True    # multiresolution strategy

    gan_iteration: 5000   # number of iteration of gan
    scale: [5]    #scale at which reconstruct the structure 2**scale = number of voxels in the volume
    sup_iteration_scale: [2000 ] # number of iteration (supervision step) to train the encoder on fake data after GAN has finished
    tomo_iteration_scale: [2000] # number of iteration (tomographic step) to reconstruct the 3D structure using poses extracted by launching trained encoder on real data.


    #strategy


    symmetrized_loss_sup: 1   # symmetrized loss from CryoAI for supervision step.
    symmetrized_loss_tomo: 1   # symmetrized loss from CryoAI for tomographic step.
    gaussian_pyramid: 0    # use of gaussian pyramid in encoder
    num_octaves: 3    # number of octaves in encoder
    progressive_supervision: 0 # progressively linealy increasing noise from 0 to esimated level in supervision step.
    use_3d_volume_encoder: 0 # use 3d volume encoder, keep false
    weigt_loss_mean_std: False #keep false



    #forward model
    normalize_gt: False # normalize real data from data loader. This is False to keep the snr values fixed.
    shift: False # shift in the real data and simulator
    ctf: False # ctf in the real and fake data, cryoem parameter
    flip_sign: False # flip sign of the real data loaded from given files
     
    kv: 300 # cryoem parameter
    cs: 2.7 # cryoem parameter
    amplitude_contrast: 0.1 # cryoem parameter
    b_factor: 0 # cryoem parameter
    value_nyquist: 0.1 # cryoem parameter

  #scheduler
    scheduler_step_size: 1000 # scheduler on the learning rate
    scheduler_gamma: 0.98 # the multiplier of lr after step size iterations

  #constraint
    positivity: True # volume is enforced to be non-negative
    mask_3d: True   # 3D sphere mask
    mask_3d_diameter: 0.9 # diameter of the 3D sphere mask centered at volume center
    mask_2d: False # 2D mask on the projections generated


  #projector
    gt_side_len: 32 # pixel number in gt
    rec_side_len: 32  # pixel number in reconstruction projection
    ProjectionSize: 32 # pixel number in reconstruction projection (has to be kept same as rec_side_len)
    map_shape: 32  # pixel number in reconstruction projection (has to be kept same as rec_side_len)
    batch_size: 8 # size of batch
    noise: True # addition of noise in real and fake data. For fake data the level of noise is learnt by gan.
    weight_gen: 1


  #optimization_gen:
    gen_lr: 1e-3
    gen_momentum: 0.5
    gen_beta_1: 0.5
    gen_beta_2: 0.9
    gen_eps: 1e-8
    gen_clip_grad: True
    gen_clip_norm_value: 1000
    gen_weight_decay: 0

  #optimization_dis:
    dis_iterations: 4
    dis_optimizer: 'adam'
    dis_lr: 1e-3
    dis_beta_1: 0.5
    dis_beta_2: 0.9
    dis_eps: 1e-8
    dis_clip_grad: True
    dis_clip_norm_value: 1e8
    dis_weight_decay: 0

  #optimization_scalar:
    scalar_optimizer: 'adam'
    scalar_lr: 1e-2
    scalar_beta_1: 0.5
    scalar_beta_2: 0.99
    scalar_eps: 1e-8
    scalar_weight_decay: 0
    scalar_clip_grad: True
    scalar_clip_norm_value: 1e8

  #optimization_encoder:
    encoder_lr: 0.001
    encoder_beta_1: 0.9
    encoder_beta_2: 0.999
    encoder_eps: 1e-8
    encoder_clip_grad: True
    encoder_clip_norm_value: 100
    encoder_weight_decay: 0
    factor_normalization: 10

  #encoder_architecture:
    encoder_type: "cryoposenet"
    regressor_orientation_layers: [512, 256]
    encoder_conv_layers: [64,128,256,512,1024]
    encoder_batch_norm: True
    encoder_max_pool: True
    encoder_equalized_lr: True
    orientation_dims: 6
    last_nonlinearity: 'tanh'
    so3_parameterization: "s2s2"
    flip_images: False

  #dis_architecture:
    num_channel_Discriminator: 64
    num_layer_Discriminator: 4 #int(np.log2(sidelen)-2) in the update_config
    num_N_Discriminator: 128
    FourierDiscriminator: False
    leak_value: 0.1
    normalize_dis_input: True

